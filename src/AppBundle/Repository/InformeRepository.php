<?php

namespace AppBundle\Repository;

use Doctrine\ORM\EntityRepository;
use AppBundle\Entity\Cliente;
use AppBundle\Entity\Comprobante;
use AppBundle\Entity\OrdenTrabajo;
use AppBundle\Entity\PagoTipo;
use AppBundle\Entity\ReciboComprobante;
use AppBundle\Entity\ClientePago;
use AppBundle\Entity\Recibo;

/**
 * PresupuestoRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class InformeRepository extends EntityRepository
{
    public function generarInformeVentas($tipoPago, $fechaDesde, $fechaHasta){
        
        $em = $this->getDoctrine()->getManager();
        $queryBuilder = $em->createQueryBuilder();
        $query = $queryBuilder
        ->select('cli.nombre, ot.id as id_OT, c.caeNumero, c.fecha, c.total, pt.nombre as tipoPago,
                    ( c.total - COALESCE(SUM(rc.importe), 0) ) as diferencia')
        ->from(Cliente::class, 'cli')
        ->innerJoin(Comprobante::class, 'c', 'WITH', 'cli.id = c.cliente')
        ->leftJoin(OrdenTrabajo::class, 'ot', 'WITH', 'ot.id = c.ordenTrabajo')
        ->leftJoin(ReciboComprobante::class, 'rc', 'WITH', 'rc.comprobante = c.id')
        ->leftJoin(Recibo::class, 'r', 'WITH', 'r.id = rc.recibo')
        ->leftJoin(ClientePago::class, 'cp', 'WITH', 'cp.recibo = r.id')
        ->leftJoin(PagoTipo::class, 'pt', 'WITH', 'pt.id = cp.pagoTipo')
        ->andWhere('pt.id = :pagoTipoId')
        ->andWhere('c.fecha >= :fechaDesde')
        ->andWhere('c.fecha <= :fechaHasta')
        ->groupBy('cli.id, c.id, ot.id, pt.id')
        ->orderBy('c.fecha')
        ->setParameter('pagoTipoId', $tipoPago)
        ->SetParameter('fechaDesde', $fechaDesde)
        ->SetParameter('fechaHasta', $fechaHasta)
        ->getQuery();

        // Obtengo los resultados de la consulta
        $ventasCredito = $query->getResult();

        return $ventasCredito;
    }
}